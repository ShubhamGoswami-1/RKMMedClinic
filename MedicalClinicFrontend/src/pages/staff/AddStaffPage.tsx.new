import React, { useState, useEffect } from 'react';
import StaffForm from '../../components/staff/StaffForm';
import { useAppSelector, useAppDispatch } from '../../hooks/redux';
import { fetchAllStaff } from '../../store/slices/staffSlice';

interface ExtendedStaff {
  _id: string;
  firstName: string;
  lastName: string;
  email: string;
  department: string;
  designation: string;
  status: 'active' | 'inactive';
  joinDate?: string | Date;
}

const AddStaffPage: React.FC = () => {
  const [showSuccessMessage, setShowSuccessMessage] = useState(false);
  const { staff, loading } = useAppSelector((state) => state.staff);
  const dispatch = useAppDispatch();
  
  // Fetch staff data when component mounts
  useEffect(() => {
    dispatch(fetchAllStaff());
  }, [dispatch]);
  
  const handleSuccess = () => {
    setShowSuccessMessage(true);
    // Refresh staff list after successful creation
    dispatch(fetchAllStaff());
    setTimeout(() => {
      setShowSuccessMessage(false);
    }, 5000);
  };
  
  return (
    <div className="container mx-auto px-4 py-8">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold text-gray-900">Add New Staff</h1>
      </div>
      
      {showSuccessMessage && (
        <div className="bg-green-50 border-l-4 border-green-400 p-4 mb-6">
          <div className="flex">
            <div>
              <p className="text-sm text-green-700">
                Staff has been created successfully with leave allocations!
              </p>
            </div>
          </div>
        </div>
      )}
      
      <StaffForm onSuccess={handleSuccess} />
      
      {staff.length > 0 && (
        <div className="mt-10">
          <h2 className="text-xl font-semibold mb-4">Recently Added Staff</h2>
          <div className="bg-white shadow overflow-hidden rounded-md">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Name
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Email
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Designation
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Department
                  </th>
                  <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Status
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {staff.slice(0, 5).map((staffMember: ExtendedStaff) => (
                  <tr key={staffMember._id}>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div>
                          <div className="text-sm font-medium text-gray-900">
                            {staffMember.firstName} {staffMember.lastName}
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-500">{staffMember.email}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-500">{staffMember.designation}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-500">{staffMember.department}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                        staffMember.status === 'active' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-gray-100 text-gray-800'
                      }`}>
                        {staffMember.status}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
    </div>
  );
};

export default AddStaffPage;
